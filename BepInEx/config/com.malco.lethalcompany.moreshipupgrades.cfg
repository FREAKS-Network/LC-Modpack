## Settings file was created by plugin More Ship Upgrades v3.12.1
## Plugin GUID: com.malco.lethalcompany.moreshipupgrades

[_Alternative Currency_]

## Allows purchasing Lategame Upgrades with another currency other than Company Credits
# Setting type: Boolean
# Default value: false
Enable Alternative Currency System = false

## How much a single unit of Alternative Currency is worth in Company Credits when purchasing upgrades.
# Setting type: Int32
# Default value: 100
Credits to Alternative Currency Ratio = 100

## How much a single unit of Alternative Currency is worth in Quota Fullfilled
# Setting type: Int32
# Default value: 100
Quota to Alternative Currency Ratio = 100

## How much a single unit of Alternative Currency is worth in Company Credits during currency conversions
# Setting type: Int32
# Default value: 100
Credits to Alternative Currency Conversion Ratio = 100

[_Item Progression Route_]

## Alternative Item Progression
## If true, items retrieved can be used for ship upgrades.
# Setting type: Boolean
# Default value: false
Enable Item Progression = false

## Item Progression Mode
## Supported Modes: 
## CustomScrap: Specified scrap will contribute towards the level of the associated upgrade.
## UniqueScrap: All scrap (specifications will be ignored) will contribute towards the level of a random assigned upgrade
## NearestValue: At the end of each Quota, grant a random upgrade worth the nearest total scrap collected, rounded down.
## ChancePerScrap: For each scrap sold, run a configured chance to receive a random/cheap/lowest tier upgrade.
## Apparatice: Always receive an upgrade when an apparatus has been successfully sold.
# Setting type: CollectionModes
# Default value: CustomScrap
# Acceptable values: CustomScrap, UniqueScrap, NearestValue, ChancePerScrap, Apparatice
Item Progression Mode = CustomScrap

## Item Progression Contribution Multiplier
## The multiplier for scrap's value contribution towards an upgrade.
# Setting type: Single
# Default value: 0.85
Item Progression Multiplier = 0.85

## Upgrade Chance Calculation
## Only used if Item Progression Mode is set to ChancePerScrap.
## X -> (X * 100) %
# Setting type: Single
# Default value: 0.05
Scrap Upgrade Chance = 0.05

## Upgrade Chance Priority
## Only used if Item Progression Mode is set to ChancePerScrap.
## Acceptable Values:
## Random: Pick a random upgrade to apply.
## Cheapest: Pick the cheapest upgrade to apply.
## Lowest Tier: Pick the upgrade with the lowest level to apply.
# Setting type: ChancePerScrapModes
# Default value: LowestLevel
# Acceptable values: Random, Cheapest, LowestLevel
Upgrade Chance Priority = LowestLevel

## Blacklisted items for Item Progression.
## Only used if Item Progression Mode is set to UniqueScrap. These items will NOT contribute towards ANY upgrade
# Setting type: String
# Default value: Clipboard
Blacklisted Items = Clipboard

## Items that are considered "Apparatice" and provide a set amount of upgrades once sold to The Company.
## The item name is either the one displayed in the scan node or its internal name.
## This list is only valid if Item Progression Mode is set to Apparatice.
# Setting type: String
# Default value: Apparatus@1,ExampleItemName@2
Apparatus Items = Apparatus@1,ExampleItemName@2

## Prevents the upgrades from being purchaseable in the store to be only used to know how far are they to acquiring one. Only valid if Item Progression mode is toggled on
# Setting type: Boolean
# Default value: false
Non-Purchaseable Upgrades = false

## Shows all the items associated to each upgrade regardless if they were sold before or not.
# Setting type: Boolean
# Default value: false
Always Show Contribution Items = false

[_Misc_]

## If true this will ignore the individual shared upgrade option for all other upgrades and set all upgrades to be shared.
# Setting type: Boolean
# Default value: true
Convert all upgrades to be shared. = true

## 0.85 = 15% chance of an upgrade going on sale.
# Setting type: Single
# Default value: 0.85
Chance of upgrades going on sale = 0.85

## If true, you will keep your upgrades after being fired by The Company.
# Setting type: Boolean
# Default value: false
Keep upgrades after quota failure = false

## If enabled, chat messages will be displayed when loading an upgrade for the first time.
# Setting type: Boolean
# Default value: true
Show upgrades being loaded in chat = false

## When an upgrade is on sale, apply the sale only on the first ever purchase of it while on sale. Consecutive purchases will not have the sale applied
# Setting type: Boolean
# Default value: false
Apply upgrade sale on one purchase = false

## When viewing an upgrade's information, wether show world-building text along with pratical information or not.
# Setting type: Boolean
# Default value: true
Show World Building text in Upgrade information = true

## If toggled on, the upgrade bought for the first time will only be buyable after by the purchasing player. This is only relevant to individual upgrades
# Setting type: Boolean
# Default value: false
Limited Buyable Upgrades = false

## If toggled off, upgrades which are locked to other crew members for purchase will not appear in the store
# Setting type: Boolean
# Default value: true
Show Locked Upgrades = true

## When enabled, replaces the names of each upgrades with the ones defined in this section
# Setting type: Boolean
# Default value: false
Override Upgrade Names = false

[_Randomize Upgrades_]

## Upgrades will be randomized per selected event to be allowed purchased on the store.
# Setting type: Boolean
# Default value: false
Enable Randomize Upgrades = false

## Amount of Upgrades that will always appear in the store (if allowed).
# Setting type: Int32
# Default value: 5
Amount of Upgrades = 5

## Wether purchased upgrades will always show in the store and the specified amount of random upgrades will not include these in the selection.
# Setting type: Boolean
# Default value: true
Show purchased upgrades = true

## Event which triggers the random upgrades being changed in the store.
# Setting type: RandomizeUpgradeEvents
# Default value: PerQuota
# Acceptable values: PerQuota, PerMoonRouting, PerMoonLanding
Randomize Upgrades Event = PerQuota

[Aluminium Coils]

## Tier upgrade which reduces the zap gun minigame's difficulty, making it easier to manage.
# Setting type: Boolean
# Default value: true
Enable Aluminium Coils Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Aluminium Coils
Alternative name for Aluminium Coils upgrade = Aluminium Coils

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 750,600, 800, 1000
Price of each additional upgrade = 600, 800, 1000

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Past 100%, the zap gun minigame will have no difficulty in following it.
# Setting type: Int32
# Default value: 25
Initial multiplier applied to the minigame difficulty multiplier (%) = 25

## Past 100%, the zap gun will have no cooldown after being used
# Setting type: Int32
# Default value: 10
Initial multiplier applied to the zap guns cooldown (%) = 10

## Past 100%, the zap gun minigame will have no difficulty in following it.
# Setting type: Int32
# Default value: 10
Incremental multiplier applied to the minigame difficulty multiplier (%) = 10

## Past 100%, the zap gun will have no cooldown after being used
# Setting type: Int32
# Default value: 10
Incremental multiplier applied to the zap guns cooldown = 10

# Setting type: Single
# Default value: 1
Initial value incremented to the enemy stun timer when using the zap gun = 1

# Setting type: Single
# Default value: 2
Initial value incremented to the zap guns range to stun an enemy = 2

# Setting type: Single
# Default value: 1
Incremental value incremented to the enemy stun timer when using the zap gun = 1

# Setting type: Single
# Default value: 1
Incremental value incremented to the zap guns range to stun an enemy = 1

Price of Aluminium Coils upgrade = 750

[Back Muscles]

## Reduce carry weight
# Setting type: Boolean
# Default value: true
Enable Back Muscles Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Back Muscles
Alternative name for Back Muscles upgrade = Back Muscles

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 715,600,700,800
Price of each additional upgrade = 600,700,800

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Your carry weight is multiplied by this.
# Setting type: Single
# Default value: 0.5
Carry Weight Multiplier = 0.5

## Each upgrade subtracts this from the above coefficient.
# Setting type: Single
# Default value: 0.1
Carry Weight Increment = 0.1

## Applied mode when purchasing the upgrade:
## ReduceWeight (Reduces the overall weight of items when grabbed), ReduceCarryInfluence (Reduces the carry weight influence when sprinting), ReduceStrain (Reduces the carry weight influence on stamina consumption when running),
# Setting type: UpgradeMode
# Default value: ReduceWeight
# Acceptable values: ReduceWeight, ReduceCarryInfluence, ReduceCarryStrain
Upgrade Mode for Back Muscles = ReduceWeight

Price of Back Muscles Upgrade = 715

[Bargain Connections]

## Tier upgrade which increases the amount of items that can be on sale in the store
# Setting type: Boolean
# Default value: true
Enable Bargain Connections Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Bargain Connections
Alternative name for Bargain Connections upgrade = Bargain Connections

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 200,225,300,375
Price of each additional upgrade = 225,300,375

# Setting type: Int32
# Default value: 3
Initial additional amount of items that can go on sale = 3

# Setting type: Int32
# Default value: 2
Incremental additional amount of items that can go on sale = 2

Price of Bargain Connections = 200

[Beekeeper]

## Take less damage from bees and hornets
# Setting type: Boolean
# Default value: true
Enable Beekeeper Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Beekeeper
Alternative name for Beekeeper upgrade = Beekeeper

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 450,225,280,340
Price of each additional upgrade = 225,280,340

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Incoming damage from bees (from hives) is 10 and butler's deal 40 (20 if solo).
# Setting type: Single
# Default value: 0.64
Multiplied to incoming damage (rounded to int) = 0.64

## Multiplier applied to the value of beehive when reached max level
# Setting type: Single
# Default value: 1.5
Hive value increase multiplier = 1.5

## Every time Beekeeper is upgraded this value will be subtracted to the base multiplier above.
# Setting type: Single
# Default value: 0.15
Additional % Reduced per level = 0.15

Price of Beekeeper Upgrade = 450

[Better Scanner]

## Further scan distance, no LOS needed.
# Setting type: Boolean
# Default value: true
Enable Better Scanner Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Better Scanner
Alternative name for Better Scanner upgrade = Better Scanner

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

# Setting type: Int32
# Default value: 650
Price of Better Scanner Upgrade = 650

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## How much further away you can scan the ship and entrance.
# Setting type: Single
# Default value: 150
Ship and Entrance node distance boost = 150

## How much further away you can scan other nodes.
# Setting type: Single
# Default value: 20
Node distance boost = 20

## If true the final upgrade will scan scrap AND enemies through walls.
# Setting type: Boolean
# Default value: false
Scan enemies through walls on final upgrade = false

## If false `scan enemies` only returns a count of outside and inside enemies, else it returns the count for each enemy type.
# Setting type: Boolean
# Default value: true
Verbose `scan enemies` command = true

## This tier unlocks ship scan commands.
# Setting type: Int32
# Default value: 500
Price of second Better Scanner tier = 500

## This tier unlocks scanning through walls.
# Setting type: Int32
# Default value: 800
Price of third Better Scanner tier = 800

[Bigger Lungs]

## More Stamina
# Setting type: Boolean
# Default value: true
Enable Bigger Lungs Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Bigger Lungs
Alternative name for Bigger Lungs upgrade = Bigger Lungs

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 600,350,450,550
Price of each additional upgrade = 350,450,550

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Amount of sprint time gained when unlocking the upgrade.
## Default vanilla value is 11f.
# Setting type: Single
# Default value: 6
Sprint Time Unlock = 6

## Affects the rate of the player regaining stamina
# Setting type: Single
# Default value: 1.05
Stamina Regeneration Increase = 1.05

## Multiplied with the vanilla cost of jumping
# Setting type: Single
# Default value: 0.9
Stamina cost decrease on jumps = 0.9

## Amount of sprint time gained when increasing the level of upgrade.
# Setting type: Single
# Default value: 1.25
Sprint Time Increment = 1.25

## Added to initial multiplier
# Setting type: Single
# Default value: 0.05
Incremental stamina regeneration increase = 0.05

## Added to initial multiplier (as in reduce the factor)
# Setting type: Single
# Default value: 0.05
Incremental stamina cost decrease on jumps = 0.05

## When reached provided level, the effect will start applying.
# Setting type: Int32
# Default value: 1
Level of Bigger Lungs to apply stamina regeneration = 1

## When reached provided level, the effect will start applying.
# Setting type: Int32
# Default value: 2
Level of Bigger Lungs to apply stamina cost decrease on jumps = 2

Price of Bigger Lungs Upgrade = 600

[Carbon Kneejoints]

## Tier upgrade which reduces the movement speed loss due to crouching.
# Setting type: Boolean
# Default value: true
Enable Carbon Kneejoints Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Carbon Kneejoints
Alternative name for Carbon Kneejoints upgrade = Carbon Kneejoints

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 100,50,100,150
Price of each additional upgrade = 50,100,150

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Initial percentage decrease of the movement speed loss while crouching when first purchasing the upgrade
# Setting type: Int32
# Default value: 20
Initial Crouch Movement Speed Debuff Decrease = 20

## Incremental percentage decrease of the movement speed loss while crouching when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 20
Incremental Crouch Movement Speed Debuff Decrease = 20

Price of Carbon Kneejoints Upgrade = 100

[Charging Booster]

## Tier upgrade which allows charging items in a radar booster
# Setting type: Boolean
# Default value: true
Enable Charging Booster Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Charging Booster
Alternative name for Charging Booster upgrade = Charging Booster

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 300,250,300,400
Price of each additional upgrade = 250,300,400

# Setting type: Single
# Default value: 90
Cooldown of the charging station in radar boosters when used = 90

# Setting type: Single
# Default value: 10
Incremental cooldown decrease whenever the level of the upgrade is incremented = 10

# Setting type: Int32
# Default value: 50
Percentage of charge that is added to the held item when using the radar booster charge station = 50

Price of Charging Booster Upgrade = 300

[Clay Glasses]

## Tier upgrade which increases the distance to start seeing the Clay Surgeon Entity.
# Setting type: Boolean
# Default value: true
Enable Clay Glasses Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Clay Glasses
Alternative name for Clay Glasses upgrade = Clay Glasses

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 200,300,400,500,600
Price of each additional upgrade = 300,400,500,600

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Distance increased when first purchasing the upgrade to be able to spot the Clay Surgeon
# Setting type: Single
# Default value: 10
Initial Distance Increase = 10

## Distance increased when purchasing further levels of the upgrade to be able to spot the Clay Surgeon
# Setting type: Single
# Default value: 5
Incremental Distance Increase = 5

Price of Clay Glasses Upgrade = 200

[Climbing Gloves]

## Tier upgrade which increases the speed of climbing ladders
# Setting type: Boolean
# Default value: true
Enable Climbing Gloves Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Climbing Gloves
Alternative name for Climbing Gloves upgrade = Climbing Gloves

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 150,200,250,300
Price of each additional upgrade = 200,250,300

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Vanilla climb speed is 4 units
# Setting type: Single
# Default value: 1
Initial value added to the players climbing speed = 1

# Setting type: Single
# Default value: 0.5
Incremental value added to the players climbing speed = 0.5

Price of Climbing Gloves Upgrade = 150

[Contracts]

# Setting type: Boolean
# Default value: true
Enable the ability to purchase contracts / missions = true

## When enabled, typing contract will automatically assign you a random contract when possible. (Essentialy old behaviour)
# Setting type: Boolean
# Default value: false
Random Contract on Keyword = false

## If true, "contract" command will only generate contracts on free moons.
# Setting type: Boolean
# Default value: true
Random contracts on free moons only = true

# Setting type: Int32
# Default value: 500
Price of a random contract = 500

# Setting type: Int32
# Default value: 750
Price of a specified moon contract = 750

# Setting type: Int32
# Default value: 500
Value of an exterminator contract reward = 500

# Setting type: Int32
# Default value: 500
Value of an exorcism contract reward = 500

# Setting type: Int32
# Default value: 500
Value of an defusal contract reward = 500

# Setting type: Int32
# Default value: 500
Value of an extraction contract reward = 500

# Setting type: Int32
# Default value: 500
Value of a data contract reward = 500

## How many bugs to spawn during exterminator contracts.
# Setting type: Int32
# Default value: 20
Hoarder Bug Spawn Number = 20

## How many ghosts/thumpers to spawn when failing exorcism contracts
# Setting type: Int32
# Default value: 3
Dress Girl / Thumper Spawn Number = 3

## Subtract 1 and multiply by 100 (2.5 = 150lbs).
# Setting type: Single
# Default value: 2.5
Weight of an extraction human = 2.5

## 0.0 - 1.0
# Setting type: Single
# Default value: 0.25
Volume of the scavenger voice clips = 0.25

## If true the main object for contracts will try spawn as far away from the main entrance as possible. If false it will spawn at a random location.
# Setting type: Boolean
# Default value: true
Spawn main object far away = true

# Setting type: Int32
# Default value: 3
Amount of medkits that can spawn in the Extraction contract = 3

## Make this false if you don't want the data contract
# Setting type: Boolean
# Default value: true
Enable the data contract = true

## Make this false if you don't want the extraction contract
# Setting type: Boolean
# Default value: true
Enable the extraction contract = true

## Make this false if you don't want the exorcism contract
# Setting type: Boolean
# Default value: true
Enable the exorcism contract = true

## Make this false if you don't want the defusal contract
# Setting type: Boolean
# Default value: true
Enable the defusal contract = true

## Make this false if you don't want the exterminator contract
# Setting type: Boolean
# Default value: true
Enable the exterminator contract = true

## 0 = None of the quota value will influence the loot's value.
## 100 = The quota value will be added fully to the loot's value.
# Setting type: Int32
# Default value: 25
Multiplier applied to the contract loot items dependant on the current applied quota = 25

[Deeper Pockets]

## Tier upgrade which allows the player to carry more than one two handed item in their inventory
# Setting type: Boolean
# Default value: true
Enable Deeper Pockets Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Deeper Pockets
Alternative name for Deeper Pockets upgrade = Deeper Pockets

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 500,750
Price of each additional upgrade = 750

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Whether or not wheelbarrows and shopping carts can be stored in deeper pockets
# Setting type: Boolean
# Default value: true
Allow wheelbarrows to be stored in deeper pockets = true

## The amount of two handed carry capacity increased to the player when first buying the upgrade
# Setting type: Int32
# Default value: 1
Initial carry capacity increase = 1

## The amount of two handed carry capacity increased to the player when increase the upgrade level
# Setting type: Int32
# Default value: 1
Incremental carry capacity increase = 1

Price of Deeper Pockets Upgrade = 500

[Discombobulator]

## Stun enemies around the ship.
# Setting type: Boolean
# Default value: true
Enable Discombobulator Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Discombobulator
Alternative name for Discombobulator upgrade = Discombobulator

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 450,330,460,620
Price of each additional upgrade = 330,460,620

# Setting type: Boolean
# Default value: true
Notify Local Chat of Enemy Stun Duration = true

## Level of Discombobulator in which it starts dealing damage on enemies it stuns
# Setting type: Int32
# Default value: 2
Initial level of dealing damage = 2

## Amount of damage when reaching the first level that unlocks damage on stun
## To give an idea of what's too much, Eyeless Dogs have 12 health.
# Setting type: Int32
# Default value: 2
Initial amount of damage = 2

## Damage increase when purchasing later levels
# Setting type: Int32
# Default value: 1
Damage Increase on Purchase = 1

## Enemies that aren't affected by Discombobulator. Either the internal name (EnemyType.enemyName) or the name shown in the scan node if it has one. Each enemy is separated by a comma (',')
# Setting type: String
# Default value: 
Blacklisted Enemies = 

# Setting type: Single
# Default value: 40
Discombobulator Effect Radius = 40

# Setting type: Single
# Default value: 120
Discombobulator Cooldown = 120

## If enabled, the stun time used during trigger is absolute and it is not influenced by the enemy stun resistance.
# Setting type: Boolean
# Default value: true
Absolute Stun Duration = true

# Setting type: Single
# Default value: 7.5
Discombobulator Stun Duration = 7.5

## The amount added to stun duration on upgrade.
# Setting type: Single
# Default value: 1
Discombobulator Increment = 1

Individual Purchase = true

Price of Discombobulator Upgrade = 450

[Drop Pod Thrusters]

## Make the Drop Pod, the ship that deliver items bought on the terminal, land faster.
# Setting type: Boolean
# Default value: true
Enable Drop Pod Thrusters Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Drop Pod Thrusters
Alternative name for Drop Pod Thrusters upgrade = Drop Pod Thrusters

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

# Setting type: Int32
# Default value: 300
Price of Drop Pod Thrusters Upgrade = 300

# Setting type: Single
# Default value: 20
Time decrement on the timer used for subsequent item deliveries = 20

# Setting type: Single
# Default value: 10
Time decrement on the timer used for the first ever item delivery = 10

## How long (in seconds) the item drop ship stays after being opened
# Setting type: Single
# Default value: 0
Time for item dropship to exit = 0

Enable the Drop Pod Thrusters upgrade = true

Drop Pod Thrusters Price = 300

[Effective Bandaids]

## Tier upgrade which increases the amount of health you regain when regenerating.
# Setting type: Boolean
# Default value: true
Enable Effective Bandaids Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Effective Bandaids
Alternative name for Effective Bandaids upgrade = Effective Bandaids

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 250,300,400,550
Price of each additional upgrade = 250,300,400,550

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Initial health amount increase during health regeneration when first purchasing the upgrade.
# Setting type: Int32
# Default value: 1
Initial Health Regeneration Amount Increase = 1

## Incremental health amount increase during health regeneration when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 1
Incremental Health Regeneration Amount Increase = 1

[Efficient Engines]

## Tier upgrade which applies a discount on moon routing prices for cheaper travels
# Setting type: Boolean
# Default value: true
Enable Efficient Engines Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Efficient Engines
Alternative name for Efficient Engines upgrade = Efficient Engines

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 450,600, 750, 900
Price of each additional upgrade = 600, 750, 900

# Setting type: Int32
# Default value: 15
Initial discount applied to moon routing (%) = 15

# Setting type: Int32
# Default value: 5
Incremental discount applied to moon routing (%) = 5

Price of Efficient Engines = 450

[Fast Encryption]

## Upgrades the transmitter.
# Setting type: Boolean
# Default value: true
Enable Fast Encryption Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Fast Encryption
Alternative name for Fast Encryption upgrade = Fast Encryption

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

# Setting type: Int32
# Default value: 300
Price of Fast Encryption Upgrade = 300

Enable Fast Encryption = true

Fast Encryption Price = 300

[Fedora Suit]

## One Time upgrade which makes Butler enemies not be angry at you when alone. (It will still be angry when you hit them)
# Setting type: Boolean
# Default value: true
Enable Fedora Suit Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Fedora Suit
Alternative name for Fedora Suit upgrade = Fedora Suit

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

# Setting type: Int32
# Default value: 750
Price of Fedora Suit Upgrade = 750

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

[Fusion Matter]

## Tier upgrade which allows you to teleport with specified items during teleportation (both in and out)
# Setting type: Boolean
# Default value: true
Enable Fusion Matter Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Fusion Matter
Alternative name for Fusion Matter upgrade = Fusion Matter

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 500, 650, 700
Price of each additional upgrade = 650, 700

## List of items that will be kept in the player's inventory once reached a certain level of the upgrade. You can include names shown in their scan nodes or the names shown in the Company store.
## ',' is used to separate items in a tier.
## '@' is used to separate tiers of the upgrade
# Setting type: String
# Default value: key, flashlight, walkie-talkie@shovel, pro-flashlight@belt bag, radar-booster
Fusion Matter Tiers = key, flashlight, walkie-talkie@shovel, pro-flashlight@belt bag, radar-booster

Price of Fusion Matter Upgrade = 500

[Hiking Boots]

## Tier upgrade which reduces the impact of going through uphill slopes
# Setting type: Boolean
# Default value: true
Enable Hiking Boots Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Hiking Boots
Alternative name for Hiking Boots upgrade = Hiking Boots

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 75,100,150,175
Price of each additional upgrade = 100,150,175

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Initial percentage of the uphill slope debuff removed when first purchasing the upgrade
# Setting type: Int32
# Default value: 25
Initial Uphill Slope Debuff Decrease = 25

## Incremental percetange of the uphill slope debuff removed when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 25
Incremental Uphill Slope Debuff Decrease = 25

Price of Hiking Boots Upgrade = 75

[Hollow Point]

## Tier upgrade which increases the amount of damage done by the shotgun.
# Setting type: Boolean
# Default value: true
Enable Hollow Point Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Hollow Point
Alternative name for Hollow Point upgrade = Hollow Point

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 800,1000
Price of each additional upgrade = 800,1000

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Initial damage increase of the shotgun when first purchasing the upgrade
# Setting type: Int32
# Default value: 1
Initial Shotgun Damage Increase = 1

## Incremental damage increase of the shotgun when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 1
Incremental Shotgun Damage Increase = 1

Price of Hollow Point Upgrade = 750

[Hunter]

## Collect and sell samples from dead enemies
# Setting type: Boolean
# Default value: true
Enable Hunter Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Hunter
Alternative name for Hunter upgrade = Hunter

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 500,600,700
Price of each additional upgrade = 500,600,700

## Specifies at which tier of Hunter do each sample start dropping from. Each tier is separated with a dash ('-') and each list of monsters will be separated with a comma (',')
## Supported Enemies: Hoarding Bug, Centipede (Snare Flea),Bunker Spider, Baboon Hawk, Crawler (Half/Thumper), Flowerman (Bracken), MouthDog (Eyeless Dog), Forest Giant, Tulip Snake, Manticoil, Kidnapper Fox and Spore Lizard.
# Setting type: String
# Default value: Hoarding Bug, Centipede, Spore Lizard-Bunker Spider, Baboon hawk, Tulip Snake, Kidnapper Fox-Flowerman, MouthDog, Crawler, Manticoil, Maneater-Forest Giant
Samples dropping at each tier = Hoarding Bug, Centipede, Spore Lizard-Bunker Spider, Baboon hawk, Tulip Snake, Kidnapper Fox-Flowerman, MouthDog, Crawler, Manticoil, Maneater-Forest Giant

# Setting type: Int32
# Default value: 35
Minimum scrap value of a Snare Flea sample = 35

# Setting type: Int32
# Default value: 60
Maximum scrap value of a Snare Flea sample = 60

# Setting type: Int32
# Default value: 65
Minimum scrap value of a Bunker Spider sample = 65

# Setting type: Int32
# Default value: 95
Maximum scrap value of a Bunker Spider sample = 95

# Setting type: Int32
# Default value: 45
Minimum scrap value of a Hoarding Bug sample = 45

# Setting type: Int32
# Default value: 75
Maximum scrap value of a Hoarding Bug sample = 75

# Setting type: Int32
# Default value: 80
Minimum scrap value of a Bracken sample = 80

# Setting type: Int32
# Default value: 125
Maximum scrap value of a Bracken sample = 125

# Setting type: Int32
# Default value: 100
Minimum scrap value of a Eyeless Dog sample = 100

# Setting type: Int32
# Default value: 150
Maximum scrap value of a Eyeless Dog sample = 150

# Setting type: Int32
# Default value: 75
Minimum scrap value of a Baboon Hawk sample = 75

# Setting type: Int32
# Default value: 115
Maximum scrap value of a Baboon Hawk sample = 115

# Setting type: Int32
# Default value: 80
Minimum scrap value of a Half sample = 80

# Setting type: Int32
# Default value: 125
Maximum scrap value of a Half sample = 125

# Setting type: Int32
# Default value: 80
Minimum scrap value of a Forest Keeper sample = 80

# Setting type: Int32
# Default value: 125
Maximum scrap value of a Forest Keeper sample = 125

# Setting type: Int32
# Default value: 40
Minimum scrap value of a Manticoil sample = 40

# Setting type: Int32
# Default value: 75
Maximum scrap value of a Manticoil sample = 75

# Setting type: Int32
# Default value: 30
Minimum scrap value of a Tulip Snake sample = 30

# Setting type: Int32
# Default value: 50
Maximum scrap value of a Tulip Snake sample = 50

# Setting type: Int32
# Default value: 60
Minimum scrap value of a Kidnapper Fox sample = 60

# Setting type: Int32
# Default value: 80
Maximum scrap value of a Kidnapper Fox sample = 80

# Setting type: Int32
# Default value: 30
Minimum scrap value of a Spore Lizard sample = 30

# Setting type: Int32
# Default value: 50
Maximum scrap value of a Spore Lizard sample = 50

# Setting type: Int32
# Default value: 80
Minimum scrap value of a Maneater sample = 80

# Setting type: Int32
# Default value: 120
Maximum scrap value of a Maneater sample = 120

Price of Hunter Upgrade = 700

[Interns]

## Pay x amount of credits to revive a player.
# Setting type: Boolean
# Default value: true
Enable hiring of interns = true

## Default price to hire an intern.
# Setting type: Int32
# Default value: 1000
Interns Price = 1000

## Supported modes:
## None: No restrictions applied.
## ExitBuilding: Player must exit the facility to be able to be teleported.
## EnterShip: Player must enter the ship to be able to be teleported.
# Setting type: TeleportRestriction
# Default value: None
# Acceptable values: None, ExitBuilding, EnterShip
Teleport Restriction when using Interns = None

## Amount of times you can use the command per landing. Once the amount is reached, you can no longer revive more teammates. Use "-1" for infinite
# Setting type: Int32
# Default value: -1
Revives per Landing = -1

## Time interval between each revival
# Setting type: Single
# Default value: 0
Interval between Revives = 0

## Time after purchasing it to perform the revive
# Setting type: Single
# Default value: 0
Delay before Revive = 0

[Jet Fuel]

## Tier upgrade which increases the acceleration of the jetpack during flight.
# Setting type: Boolean
# Default value: true
Enable Jet Fuel Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Jet Fuel
Alternative name for Jet Fuel upgrade = Jet Fuel

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 400,200,400,500
Price of each additional upgrade = 200,400,500

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Initial percentage increase of jetpack acceleration when first purchasing the upgrade
# Setting type: Int32
# Default value: 20
Initial Acceleration Increase = 20

## Incremental percentage increase of jetpack acceleration when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 20
Incremental Acceleration Increase = 20

Price of Jet Fuel Upgrade = 400

[Jetpack Thrusters]

## Tier upgrade which increases the maximum speed of the jetpack during flight.
# Setting type: Boolean
# Default value: true
Enable Jetpack Thrusters Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Jetpack Thrusters
Alternative name for Jetpack Thrusters upgrade = Jetpack Thrusters

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 300,150,300,400
Price of each additional upgrade = 150,300,400

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Initial percentage increase of jetpack's maximum speed during flight when first purchasing the upgrade
# Setting type: Int32
# Default value: 20
Initial Maximum Speed Increase = 20

## Incremental percentage increase of jetpack's maximum speed during flight when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 20
Incremental Maximum Speed Increase = 20

Price of Jetpack Thrusters Upgrade = 300

[Landing Thrusters]

## Tier upgrade which increases the speed of the ship landing and departing between moons
# Setting type: Boolean
# Default value: true
Enable Landing Thrusters Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Landing Thrusters
Alternative name for Landing Thrusters upgrade = Landing Thrusters

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 300,250,450,650
Price of each additional upgrade = 250,450,650

## If true, the effect will be applied on the ship speed when landing on a moon
# Setting type: Boolean
# Default value: true
Affect landing sequence speed = true

## If true, the effect will be applied on the ship speed when departing from a moon
# Setting type: Boolean
# Default value: true
Affect departing sequence speed = true

## Initial amount (%) to increment to the ship speed when first purchasing the upgrade
# Setting type: Int32
# Default value: 25
Initial speed increase = 25

## Incremental amount (%) to increment to the ship speed on further purchases of the upgrade
# Setting type: Int32
# Default value: 25
Incremental speed increase = 25

Price of Landing Thrusters Upgrade = 300

[Lethal Deals]

## One time upgrade which guarantees at least one item will be on sale in the store.
# Setting type: Boolean
# Default value: true
Enable Lethal Deals Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Lethal Deals
Alternative name for Lethal Deals upgrade = Lethal Deals

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

# Setting type: Int32
# Default value: 300
Price of Lethal Deals Upgrade = 300

Price of Lethal Deals = 300

[Life Insurance]

## Tier upgrade which reduces the credit loss from leaving a body behind when exiting a moon.
# Setting type: Boolean
# Default value: true
Enable Life Insurance Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Life Insurance
Alternative name for Life Insurance upgrade = Life Insurance

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 200,200,250,300
Price of each additional upgrade = 200,250,300

## Initial percentage decrease of the credit loss when first purchasing the upgrade
# Setting type: Int32
# Default value: 20
Initial Credit Loss Decrease = 20

## Incremental percentage decrease of the credit loss when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 20
Incremental Credit Loss Decrease = 20

Price of Life Insurance Upgrade = 200

[Lightning Rod]

## A device which redirects lightning bolts to the ship.
# Setting type: Boolean
# Default value: true
Enable Lightning Rod Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Lightning Rod
Alternative name for Lightning Rod upgrade = Lightning Rod

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

# Setting type: Int32
# Default value: 1000
Price of Lightning Rod Upgrade = 1000

## The closer you are the more likely the rod will reroute lightning.
# Setting type: Single
# Default value: 175
Effective Distance of Lightning Rod. = 175

## Supported Values:
## EffectiveRange: The closer the item is to the ship, the more likely the lightning directed to it will be redirected to the ship instead.
## AlwaysRerouteItem: Whenever an item is picked to be hit by lightning, the bolt will be redirected to the ship instead.
## AlwaysRerouteRandom: Whenever a random lightning bolt (not the one used to target items) is produced, the bolt will be redirected to the ship instead.
## AlwaysRerouteAll: Whenever any kind of lightning bolt is produced, the bolt will be redirected to the ship instead.
## 
# Setting type: UpgradeMode
# Default value: EffectiveRange
# Acceptable values: EffectiveRange, AlwaysRerouteItem, AlwaysRerouteRandom, AlwaysRerouteAll
Current Upgrade Mode for Lightning Rod = EffectiveRange

Lightning Rod Price = 1000

Active on Purchase = true

[Lithium Batteries]

## Tier upgrade which decreases the rate of battery consumed when using the item
# Setting type: Boolean
# Default value: true
Enable Lithium Batteries Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Lithium Batteries
Alternative name for Lithium Batteries upgrade = Lithium Batteries

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 100,150, 200, 250, 300
Price of each additional upgrade = 150, 200, 250, 300

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Past 100%, it won't consume any battery charge from the item
# Setting type: Int32
# Default value: 10
Initial multiplier applied to the use rate of the battery (%) = 10

## Past 100%, it won't consume any battery charge from the item
# Setting type: Int32
# Default value: 10
Incremental multiplier applied to the use rate of the battery (%) = 10

Price of Lithium Batteries upgrade = 100

[Locksmith]

## Allows you to pick locked doors by completing a minigame.
# Setting type: Boolean
# Default value: true
Enable Locksmith Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Locksmith
Alternative name for Locksmith upgrade = Locksmith

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

# Setting type: Int32
# Default value: 640
Price of Locksmith Upgrade = 640

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

Enable Locksmith upgrade = true

Locksmith Price = 640

[Long Barrel]

## Tier upgrade which increases the overall range of the shotgun and its effective damage ranges.
# Setting type: Boolean
# Default value: true
Enable Long Barrel Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Long Barrel
Alternative name for Long Barrel upgrade = Long Barrel

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 500,500,750
Price of each additional upgrade = 500,750

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Initial range percentage increase of the shotgun when first purchasing the upgrade
# Setting type: Int32
# Default value: 10
Initial Shotgun Range Increase = 10

## Incremental range percentage increase of the shotgun when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 10
Incremental Shotgun Range Increase = 10

Price of Long Barrel Upgrade = 500

[Malware Broadcaster]

## Explode Map Hazards
# Setting type: Boolean
# Default value: true
Enable Malware Broadcaster Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Malware Broadcaster
Alternative name for Malware Broadcaster upgrade = Malware Broadcaster

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

# Setting type: Int32
# Default value: 550
Price of Malware Broadcaster Upgrade = 550

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## If false Malware Broadcaster will disable the trap for a long time instead of destroying.
# Setting type: Boolean
# Default value: true
Destroy Trap = true

## If `Destroy Trap` is false this is the duration traps will be disabled.
# Setting type: Single
# Default value: 7
Disarm Time = 7

## Destroy Trap must be true! If this is true when destroying a trap it will also explode.
# Setting type: Boolean
# Default value: true
Explode Trap = true

[Market Influence]

## Tier upgrade which guarantees a minimum percentage sale on the selected item in the store.
# Setting type: Boolean
# Default value: true
Enable Market Influence Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Market Influence
Alternative name for Market Influence upgrade = Market Influence

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 200,350,500
Price of each additional upgrade = 200,350,500

# Setting type: Int32
# Default value: 10
Initial percentage guarantee on the items on sale = 10

# Setting type: Int32
# Default value: 5
Incremental percentage guarantee on the items on sale = 5

Price of Market Influence = 250

[Mechanical Arms]

## Tier upgrade which increases the range of interacting with objects (both grabbing and interacting such as open or close a door)
# Setting type: Boolean
# Default value: true
Enable Mechanical Arms Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Mechanical Arms
Alternative name for Mechanical Arms upgrade = Mechanical Arms

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 300,400,600,800
Price of each additional upgrade = 400,600,800

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Amount of interaction range increased (in Unity units) when first purchasing the upgrade
# Setting type: Single
# Default value: 1
Initial range increase = 1

## Amount of interaction range increased (in Unity units) on further purchases of the upgrade
# Setting type: Single
# Default value: 1
Incremental range increase = 1

Price of Mechanical Arms Upgrade = 300

[Medical Nanobots]

## Tier upgrade which increases the health regeneration cap amount.
# Setting type: Boolean
# Default value: true
Enable Medical Nanobots Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Medical Nanobots
Alternative name for Medical Nanobots upgrade = Medical Nanobots

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 300,400,500,750
Price of each additional upgrade = 300,400,500,750

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Initial percentage increase of the health regeneration cap when first purchasing the upgrade.
# Setting type: Int32
# Default value: 50
Initial Health Regeneration Cap Increase = 50

## Incremental percentage increase of the health regeneration cap when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 50
Incremental Health Regeneration Cap Increase = 50

[Medkit]

## Allows you to buy a Medkit to heal yourself.
# Setting type: Boolean
# Default value: true
Enable the Medkit item = true

## Default price for Medkit.
# Setting type: Int32
# Default value: 300
Medkit price = 300

## The amount the Medkit heals you.
# Setting type: Int32
# Default value: 20
Heal Amount = 20

## The amount of times the Medkit can heal you.
# Setting type: Int32
# Default value: 3
Uses = 3

## Shows a scan node on the item when scanning
# Setting type: Boolean
# Default value: true
Enable scan node of Medkit = true

[Midas Touch]

## Tier upgrade which increases the value of the scrap found in the moons.
# Setting type: Boolean
# Default value: true
Enable Midas Touch Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Midas Touch
Alternative name for Midas Touch upgrade = Midas Touch

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 1000,1000,1500,1800,2000
Price of each additional upgrade = 1000,1500,1800,2000

## Initial percentage increase of value of the scrap found in the moons when first purchasing the upgrade
# Setting type: Int32
# Default value: 20
Initial Scrap Value Increase = 20

## Incremental percentage increase of value of the scrap found in the moons when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 20
Incremental Scrap Value Increase = 20

Price of Midas Touch Upgrade = 1000

[Name Overrides]

Override Upgrade Names = false

Alternative name for Scrap Keeper upgrade = Scrap Keeper

Alternative name for Particle Infuser upgrade = Particle Infuser

Alternative name for Silver Bullets upgrade = Silver Bullets

Alternative name for Fusion Matter upgrade = Fusion Matter

Alternative name for Long Barrel upgrade = Long Barrel

Alternative name for Hollow Point upgrade = Hollow Point

Alternative name for Jetpack Thrusters upgrade = Jetpack Thrusters

Alternative name for Jet Fuel upgrade = Jet Fuel

Alternative name for Quick Hands upgrade = Quick Hands

Alternative name for Midas Touch upgrade = Midas Touch

Alternative name for Carbon Kneejoints upgrade = Carbon Kneejoints

Alternative name for Life Insurance upgrade = Life Insurance

Alternative name for Rubber Boots upgrade = Rubber Boots

Alternative name for Oxygen Canisters upgrade = Oxygen Canisters

Alternative name for Sleight of Hand upgrade = Sleight of Hand

Alternative name for Hiking Boots upgrade = Hiking Boots

Alternative name for Traction Boots upgrade = Traction Boots

Alternative name for Fedora Suit upgrade = Fedora Suit

Alternative name for Weed Genetic Manipulation upgrade = Weed Genetic Manipulation

Alternative name for Clay Glasses upgrade = Clay Glasses

Alternative name for Mechanical Arms upgrade = Mechanical Arms

Alternative name for Scavenger Instincts upgrade = Scavenger Instincts

Alternative name for Landing Thrusters upgrade = Landing Thrusters

Alternative name for Reinforced Boots upgrade = Reinforced Boots

Alternative name for Deeper Pockets upgrade = Deeper Pockets

Alternative name for Aluminium Coils upgrade = Aluminium Coils

Alternative name for Back Muscles upgrade = Back Muscles

Alternative name for Bargain Connections upgrade = Bargain Connections

Alternative name for Beekeeper upgrade = Beekeeper

Alternative name for Better Scanner upgrade = Better Scanner

Alternative name for Charging Booster upgrade = Charging Booster

Alternative name for Discombobulator upgrade = Discombobulator

Alternative name for Efficient Engines upgrade = Efficient Engines

Alternative name for Hunter upgrade = Hunter

Alternative name for Lithium Batteries upgrade = Lithium Batteries

Alternative name for Market Influence upgrade = Market Influence

Alternative name for NV Headset Batteries upgrade = NV Headset Batteries

Alternative name for Protein Powder upgrade = Protein Powder

Alternative name for Bigger Lungs upgrade = Bigger Lungs

Alternative name for Climbing Gloves upgrade = Climbing Gloves

Alternative name for Shutter Batteries upgrade = Shutter Batteries

Alternative name for Quantum Disruptor upgrade = Quantum Disruptor

Alternative name for Running Shoes upgrade = Running Shoes

Alternative name for Stimpack upgrade = Stimpack

Alternative name for Strong Legs upgrade = Strong Legs

Alternative name for Fast Encryption upgrade = Fast Encryption

Alternative name for Drop Pod Thrusters upgrade = Drop Pod Thrusters

Alternative name for Lethal Deals upgrade = Lethal Deals

Alternative name for Lightning Rod upgrade = Lightning Rod

Alternative name for Locksmith upgrade = Locksmith

Alternative name for Malware Broadcaster upgrade = Malware Broadcaster

Alternative name for Sick Beats upgrade = Sick Beats

Alternative name for Sigurd Access upgrade = Sigurd Access

Alternative name for Walkie GPS upgrade = Walkie GPS

[Night Vision]

## Toggleable night vision.
# Setting type: Boolean
# Default value: true
Enable Night Vision Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Night Vision
Alternative name for Night Vision upgrade = Night Vision

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 300,400,500
Price of each additional upgrade = 300,400,500

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

# Setting type: Int32
# Default value: 380
Price of Night Vision Upgrade = 380

## The color your Night Vision light emits.
# Setting type: String
# Default value: #00FF00FF
Night Vision Color = #00FF00FF

## The color used for the Night Vision's UI text.
# Setting type: String
# Default value: #FFFFFFFF
Night Vision UI Text Color = #FFFFFFFF

## The color used for the Night Vision's UI battery bar.
# Setting type: String
# Default value: #00FF00FF
Night Vision UI Bar Color = #00FF00FF

## The percent battery drained when turned on (0.1 = 10%).
# Setting type: Single
# Default value: 0.1
Night Vision StartUp Cost = 0.1

## How many seconds Night Vision stays fully depleted.
# Setting type: Single
# Default value: 2
Night Vision Exhaustion = 2

## If true when you die the Night Vision will disable and will need a new pair of goggles.
# Setting type: Boolean
# Default value: true
Lose Night Vision On Death = true

## If true, when you die and lose Night Vision upon death, you will drop the Night Vision Goggles on your body.
# Setting type: Boolean
# Default value: true
Drop Night Vision Goggles on Death = true

## Default settings this will be the unupgraded time in seconds the battery will drain and regen in. Increase to increase battery life.
# Setting type: Single
# Default value: 10
The max charge for your Night Vision battery = 10

## Multiplied by timedelta, lower to increase battery life.
# Setting type: Single
# Default value: 1
Multiplier for night vis battery drain = 1

## Multiplied by timedelta, raise to speed up battery regen time.
# Setting type: Single
# Default value: 1
Multiplier for night vis battery regen = 1

## Kind of like the distance your Night Vision travels.
# Setting type: Single
# Default value: 2000
Night Vision Range = 2000

## Kind of like the brightness of your Night Vision.
# Setting type: Single
# Default value: 1000
Night Vision Intensity = 1000

## Applied to the max charge for Night Vision battery on each upgrade.
# Setting type: Single
# Default value: 2
Increase for Night Vision battery life = 2

## Applied to drain speed on each upgrade.
# Setting type: Single
# Default value: 0.15
Decrease for Night Vision battery drain = 0.15

## Applied to regen speed on each upgrade.
# Setting type: Single
# Default value: 0.4
Increase for Night Vision battery regen = 0.4

## Increases your range by this value each upgrade.
# Setting type: Single
# Default value: 0
Night Vision Range Increment = 0

## Increases your intensity by this value each upgrade.
# Setting type: Single
# Default value: 0
Night Vision Intensity Increment = 0

[Oxygen Canisters]

## Tier upgrade which reduces the consumption rate of oxygen while underwater.
# Setting type: Boolean
# Default value: true
Enable Oxygen Canisters Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Oxygen Canisters
Alternative name for Oxygen Canisters upgrade = Oxygen Canisters

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 100,100,200,400
Price of each additional upgrade = 100,200,400

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Initial percentage of oxygen consumption decrease when first purchasing the upgrade
# Setting type: Int32
# Default value: 20
Initial Oxygen Consumption Decrease = 20

## Incremental percentage of oxygen consumption decrease when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 20
Incremental Oxygen Consumption Decrease = 20

Price of Oxygen Canisters Upgrade = 100

[Particle Infuser]

## Tier upgrade which increases the speed of the teleporter during teleportation phase.
# Setting type: Boolean
# Default value: true
Enable Particle Infuser Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Particle Infuser
Alternative name for Particle Infuser upgrade = Particle Infuser

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 650,400,600
Price of each additional upgrade = 400,600

## Initial speed percentage increase of the teleporters when first purchasing the upgrade
# Setting type: Int32
# Default value: 20
Initial Teleport Speed Increase = 20

## Incremental speed percentage increase of the teleporters when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 10
Incremental Teleport Speed Increase = 10

Price of Particle Infuser Upgrade = 650

[Protein Powder]

## Do more damage with shovels
# Setting type: Boolean
# Default value: true
Enable Protein Powder Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Protein Powder
Alternative name for Protein Powder upgrade = Protein Powder

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 1000,700
Price of each additional upgrade = 700

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## The value added to hit force on initial unlock.
# Setting type: Int32
# Default value: 1
Initial additional hit force = 1

## Every time Protein Powder is upgraded this value will be added to the value above.
# Setting type: Int32
# Default value: 1
Additional hit force per level = 1

## This value is only valid when maxed out Protein Powder. Any previous levels will not apply crit.
# Setting type: Single
# Default value: 0.01
Chance of dealing a crit which will instakill the enemy. = 0.01

Price of Protein Powder Upgrade = 1000

[Quantum Disruptor]

## Tier upgrade which increases the time you can stay in a moon landing
# Setting type: Boolean
# Default value: true
Enable Quantum Disruptor Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Quantum Disruptor
Alternative name for Quantum Disruptor upgrade = Quantum Disruptor

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 1000,1200,1500,1800
Price of each additional upgrade = 1200,1500,1800

## Reset mode of when the current counter of usages reset to use the ability. Only applied when RevertTime mode is selected.
## Supported Values: MoonLanding (reset counter per each moon landing), MoonRerouting (reset counter per each moon routing), NewQuota (reset counter per each new quota)
# Setting type: ResetModes
# Default value: MoonLanding
# Acceptable values: MoonLanding, MoonRerouting, NewQuota
Reset Time of Quantum Disruptor current usages = MoonLanding

## Applied mode when purchasing the upgrade.
## Supported modes: SlowdownTime (makes the time go slower in moons), RevertTime (command prompt which reverts hours when executed, maximum usages per moon).
# Setting type: UpgradeModes
# Default value: SlowdownTime
# Acceptable values: SlowdownTime, RevertTime
Mode of Quantum Disruptor = SlowdownTime

# Setting type: Int32
# Default value: 20
How slower (in %) time will go by when unlocking the Quantum Disruptor upgrade = 20

## Amount of times you can execute the quantum command. Only applied when RevertTime mode is selected
# Setting type: Int32
# Default value: 1
Initial amount of usages of Quantum Disruptor = 1

## Amount of hours to revert when executing the quantum command. Only applied when RevertTime mode is selected
# Setting type: Int32
# Default value: 1
Initial amount of hours reverted from Quantum Disruptor = 1

# Setting type: Int32
# Default value: 10
How slower (in %) time will go by when incrementing the Quantum Disruptor level = 10

## Amount of times you can execute the quantum command. Only applied when RevertTime mode is selected
# Setting type: Int32
# Default value: 1
Incremental amount of usages of Quantum Disruptor = 1

## Amount of hours to revert when executing the quantum command. Only applied when RevertTime mode is selected
# Setting type: Int32
# Default value: 1
Incremental amount of hours reverted from Quantum Disruptor = 1

Price of Quantum Disruptor Upgrade = 1000

[Quick Hands]

## Tier upgrade which increases the interaction speed of the player.
# Setting type: Boolean
# Default value: true
Enable Quick Hands Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Quick Hands
Alternative name for Quick Hands upgrade = Quick Hands

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 100,100,150,200,250
Price of each additional upgrade = 100,150,200,250

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Initial percentage increase of interaction speed when first purchasing the upgrade
# Setting type: Int32
# Default value: 20
Initial Interaction Speed Increase = 20

## Incremental percentage increase of interaction speed when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 20
Incremental Interaction Speed Increase = 20

Price of Quick Hands Upgrade = 100

[Reinforced Boots]

## Tier upgrade which reduces the damage taken when falling from great heights
# Setting type: Boolean
# Default value: true
Enable Reinforced Boots Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Reinforced Boots
Alternative name for Reinforced Boots upgrade = Reinforced Boots

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 250,200,300,400,500
Price of each additional upgrade = 200,300,400,500

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Percentage of the damage taken from great height falls mitigated when purchased the upgrade for the first time
# Setting type: Int32
# Default value: 25
Initial damage reduction = 25

## Percentage of the damage taken from great height falls mitigated in further purchases of the upgrade
# Setting type: Int32
# Default value: 10
Incremental damage reduction = 10

Price of Reinforced Boots Upgrade = 250

[Rubber Boots]

## Tier upgrade which reduces the movement hinderance when walking on water surfaces.
# Setting type: Boolean
# Default value: true
Enable Rubber Boots Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Rubber Boots
Alternative name for Rubber Boots upgrade = Rubber Boots

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 50,50,100,200
Price of each additional upgrade = 50,100,200

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Initial percentage decrease of movement hinderance on water surfaces when first purchasing the upgrade
# Setting type: Int32
# Default value: 20
Initial Movement Hinderance Decrease = 20

## Incremental percentage decrease of movement hinderance on water surfaces when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 20
Incremental Movement Hinderance Decrease = 20

Price of Rubber Boots Upgrade = 50

[Running Shoes]

## Run Faster
# Setting type: Boolean
# Default value: true
Enable Running Shoes Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Running Shoes
Alternative name for Running Shoes upgrade = Running Shoes

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 650,500,750,1000
Price of each additional upgrade = 350,450,550

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Value added to player's movement speed when first purchased.
## Default vanilla value is 4.6f.
# Setting type: Single
# Default value: 1.4
Movement Speed Unlock = 1.4

## Distance units to subtract from footstep noise when reached final level.
# Setting type: Single
# Default value: 10
Noise Reduction = 10

## How much the above value is increased on upgrade.
# Setting type: Single
# Default value: 0.5
Movement Speed Increment = 0.5

Price of Running Shoes Upgrade = 650

[Scavenger Instincts]

## Tier upgrade which increases the amount of scrap that can spawn on a given level.
# Setting type: Boolean
# Default value: true
Enable Scavenger Instincts Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Scavenger Instincts
Alternative name for Scavenger Instincts upgrade = Scavenger Instincts

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 800,800,1000,1200,1400
Price of each additional upgrade = 800,1000,1200,1400

## The amount of additional scrap that can spawn in a given level when first purchased
# Setting type: Int32
# Default value: 4
Initial amount of scrap spawn increase = 4

## The amount of additional scrap that can spawn in a given level on further purchases
# Setting type: Int32
# Default value: 2
Incremental amount of scrap spawn increase = 2

Individual Purchase = true

Price of Scavenger Instincts Upgrade = 800

[Scrap Keeper]

## Tier upgrade which adds a chance of keeping the scrap item incase of full team wipe.
# Setting type: Boolean
# Default value: true
Enable Scrap Keeper Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Scrap Keeper
Alternative name for Scrap Keeper upgrade = Scrap Keeper

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 1000,1000,1500,3000
Price of each additional upgrade = 1000,1500,3000

## Initial percentage chance increase of keeping the scrap item when first purchasing the upgrade
# Setting type: Int32
# Default value: 25
Initial Keep Scrap Chance Increase = 25

## Incremental percentage chance increase of keeping the scrap item when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 25
Incremental Keep Scrap Chance Increase = 25

Price of Scrap Keeper Upgrade = 1000

[Shutter Batteries]

## Increases the amount of time the doors can remain shut
# Setting type: Boolean
# Default value: true
Enable Shutter Batteries Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Shutter Batteries
Alternative name for Shutter Batteries upgrade = Shutter Batteries

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 300,200,300,400
Price of each additional upgrade = 200,300,400

## Initial battery boost for the doors' lock on first purchase
# Setting type: Single
# Default value: 5
Initial battery boost = 5

## Incremental battery boost for the doors' lock after purchase
# Setting type: Single
# Default value: 5
Incremental battery boost = 5

Enable Shutter Batteries = true

Price of Shutter Batteries = 300

[Sick Beats]

## Get buffs from nearby active boomboxes.
# Setting type: Boolean
# Default value: true
Enable Sick Beats Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Sick Beats
Alternative name for Sick Beats upgrade = Sick Beats

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

# Setting type: Int32
# Default value: 500
Price of Sick Beats Upgrade = 500

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

# Setting type: Boolean
# Default value: true
Enable Damage Boost Effect = true

# Setting type: Int32
# Default value: 1
Additional Damage Dealt = 1

# Setting type: Boolean
# Default value: false
Enable Stamina Boost Effect = false

## Multiplied to stamina regen.
# Setting type: Single
# Default value: 1.25
Stamina Regen Coefficient = 1.25

# Setting type: Boolean
# Default value: false
Enable Defense Boost Effect = false

## Multiplied to incoming damage.
# Setting type: Single
# Default value: 0.5
Defense Boost Coefficient = 0.5

# Setting type: Boolean
# Default value: true
Enable Speed Boost Effect = true

# Setting type: Single
# Default value: 1.5
Speed Boost Addition = 1.5

## Radius in unity units players will be effected by an active boombox.
# Setting type: Single
# Default value: 15
Effect Radius = 15

## If enabled, moments where stamina is consumed overtime will include the stamina buff in mind
# Setting type: Boolean
# Default value: false
Apply Stamina Buff on stamina consumption situations = false

## After the upgrade has been purchased, wether the boombox attracts nearby enemies to its location or not
# Setting type: Boolean
# Default value: true
Boombox Attract Sound Toggle = true

Default unlock price = 500

[Sigurd Access]

## There's a chance that The Company will pay more for the scrap.
# Setting type: Boolean
# Default value: true
Enable Sigurd Access Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Sigurd Access
Alternative name for Sigurd Access upgrade = Sigurd Access

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

# Setting type: Int32
# Default value: 500
Price of Sigurd Access Upgrade = 500

# Setting type: Single
# Default value: 20
How much the percentage will go up = 20

# Setting type: Single
# Default value: 20
Chance for the upgrade to activate = 20

## Supported Modes:
## AllDays: All days have a chance of increased Company Buy Rate
## LastDay: Day of the deadline has a chance of increased COmpany Buy Rate
# Setting type: FunctionModes
# Default value: AllDays
# Acceptable values: LastDay, AllDays
Sigurd Function Mode = AllDays

Enable the Sigurd Access upgrade = true

Sigurd Access Price = 500

[Silver Bullets]

## One time upgrade which allows you to eliminate ghost girl entities with the shotgun.
# Setting type: Boolean
# Default value: true
Enable Silver Bullets Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Silver Bullets
Alternative name for Silver Bullets upgrade = Silver Bullets

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

# Setting type: Int32
# Default value: 500
Price of Silver Bullets Upgrade = 500

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

[Sleight of Hand]

## Tier upgrade which reduces the reload time of the shotgun.
# Setting type: Boolean
# Default value: true
Enable Sleight of Hand Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Sleight of Hand
Alternative name for Sleight of Hand upgrade = Sleight of Hand

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 100,150,200,250
Price of each additional upgrade = 150,200,250

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Initial percentage of the reload speed increase when first purchasing the upgrade
# Setting type: Int32
# Default value: 25
Initial Reload Speed Increase = 25

## Incremental percentage of the reload speed increase when purchasing further levels of the upgrade
# Setting type: Int32
# Default value: 25
Incremental Reload Speed Increase = 25

Price of Sleight of Hand Upgrade = 100

[Stimpack]

## Increases player's health.
# Setting type: Boolean
# Default value: true
Enable Stimpack Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Stimpack
Alternative name for Stimpack upgrade = Stimpack

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 600,300, 450, 600
Price of each additional upgrade = 300, 450, 600

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Amount of health gained when unlocking the upgrade
# Setting type: Int32
# Default value: 20
Initial health boost = 20

## Every time Stimpack is upgraded this value will be added to the value above.
# Setting type: Int32
# Default value: 20
Additional health boost = 20

Stimpack Price = 600

[Strong Legs]

## Jump Higher
# Setting type: Boolean
# Default value: true
Enable Strong Legs Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Strong Legs
Alternative name for Strong Legs upgrade = Strong Legs

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 300,150,190,250
Price of each additional upgrade = 150,190,250

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Amount of jump force added when unlocking the upgrade.
## Default vanilla value is 13f.
# Setting type: Single
# Default value: 3
Jump Force Unlock = 3

## How much the above value is increased on upgrade.
# Setting type: Single
# Default value: 0.75
Jump Force Increment = 0.75

Price of Strong Legs Upgrade = 300

[Traction Boots]

## Tier upgrade which increases the traction factor on the player's movement
# Setting type: Boolean
# Default value: true
Enable Traction Boots Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Traction Boots
Alternative name for Traction Boots upgrade = Traction Boots

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 100,100,150,250
Price of each additional upgrade = 100,150,250

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Multiplier value (%) applied to the player's walking force when first purchasing the upgrade.
# Setting type: Int32
# Default value: 25
Initial Traction Increase = 25

## Multiplier value (%) added to the initial which then gets applied to the player's walking force when first purchasing the upgrade.
# Setting type: Int32
# Default value: 25
Incremental Traction Increase = 25

Price of Traction Boots Upgrade = 100

[Walkie GPS]

## Holding a walkie talkie displays location.
# Setting type: Boolean
# Default value: true
Enable Walkie GPS Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Walkie GPS
Alternative name for Walkie GPS upgrade = Walkie GPS

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

# Setting type: Int32
# Default value: 450
Price of Walkie GPS Upgrade = 450

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

Enable the Walkie GPS upgrade = true

Walkie GPS Price = 450

[Weed Genetic Manipulation]

## Tier upgrade which increases the effectiveness of the Weed Killer on eradicating plants
# Setting type: Boolean
# Default value: true
Enable Weed Genetic Manipulation Upgrade = true

## Minimum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 60
Minimum Sale Percentage = 60

## Maximum percentage achieved when the upgrade goes on sale
# Setting type: Int32
# Default value: 90
Maximum Sale Percentage = 90

# Setting type: String
# Default value: Weed Genetic Manipulation
Alternative name for Weed Genetic Manipulation upgrade = Weed Genetic Manipulation

## Items that when sold contribute to the purchase of the upgrade. Either the scan node's name or ItemProperties.itemName can be inserted here
# Setting type: String
# Default value: 
Contribution Items = 

## Method of purchase allowed for the upgrade
# Setting type: PurchaseMode
# Default value: Both
# Acceptable values: AlternateCurrency, CompanyCredits, Both
Purchase Mode = Both

## Value must be seperated by commas EX: '123,321,222'
# Setting type: String
# Default value: 100,100,150,200
Price of each additional upgrade = 100,150,200

## If true: upgrade will apply only to the client that purchased it. (Overriden by 'Convert all upgrades to be shared' option in Misc section)
# Setting type: Boolean
# Default value: true
Individual Purchase = true

## Amount of effectiveness (%) when first purchasing the upgrade increased on the Weed Killer to eradicate plants
# Setting type: Int32
# Default value: 75
Initial Effectiveness Increase = 75

## Amount of effectiveness (%) when purchasing further levels of the upgrade increased on the Weed Killer to eradicate plants
# Setting type: Int32
# Default value: 50
Incremental Effectiveness Increase = 50

Price of Weed Genetic Manipulation Upgrade = 100

